{"version":3,"sources":["components/story.module.css","components/Scene.js","components/Choices.js","components/Story.js","state/actions.js","App.js","state/reducers.js","state/index.js","serviceWorker.js","index.js"],"names":["module","exports","backgroundImages","crime","americanos","segundaclasse","bicho","bicho2","store","tags","console","log","className","style","backgroundImage","background","backgroundRepeat","backgroundSize","position","left","top","transform","width","height","Choices","choices","makeChoice","map","choice","key","index","onClick","text","Story","sceneText","idx","classes","typewriter","ink","storyContent","getGlobalVars","variablesState","Object","keys","_globalVariables","reduce","acc","gameLoop","currentTags","canContinue","push","Continue","concat","currentChoices","length","GameOverError","globals","tag","split","reason","rest","instance","Error","setPrototypeOf","getPrototypeOf","this","captureStackTrace","prototype","create","constructor","value","enumerable","writable","configurable","__proto__","connect","state","ending","dispatch","choiceIdx","ChooseChoiceIndex","gameData","type","err","props","Scene","INITIAL_STATE","createStore","action","devToolsEnhancer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57120573.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typewriter\":\"story_typewriter__61rSv\",\"typing\":\"story_typing__So3-g\",\"blink-caret\":\"story_blink-caret__1EYHg\"};","import React from \"react\"\n\nconst backgroundImages = {\n    crime: \"https://upload.wikimedia.org/wikipedia/commons/9/9b/Homic%C3%ADdios_no_Brasil_de_1996_a_2015.png\",\n    americanos: \"https://www.decluttr.com/wp-content/uploads/2017/02/DC-SuperheroesByStateMap-RGB-1.jpg\", \n    segundaclasse: \"https://abrilsuperinteressante.files.wordpress.com/2018/07/chapolin-destaque.png?w=1024\", \n    bicho: \"https://i.ibb.co/0tmq6cy/bicho6.png\", \n    bicho2: \"https://i.ibb.co/2N7zMqc/bicho7.png\", \n  store: \"https://cdn.glitch.com/475e1d65-6dfb-4a37-92b8-ffd178d08d8c%2Fstore.jpg?1520817110669\" \n}\n\nconst defaultImage = \"\"\n\nexport default ({ tags }) => {\n        console.log(tags)\n    return (\n        <section\n            className=\"scene\"\n            style={{backgroundImage: `url(${\n                tags && backgroundImages[tags.background] \n                    ? backgroundImages[tags.background] \n                    : defaultImage\n                })`, backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\", position: \"absolute\", left: \"50%\",\n  top: \"50%\",transform: \"translate(-50%, -50%)\",width: \"40%\",height: \"50%\"\n            }}\n        />\n    )\n}","import React from \"react\"\n\nconst Choices = ({ choices, makeChoice }) => (\n\n    <section className=\"choices\">\n        <h3>Tome uma decis√£o...</h3>\n        <ul>\n            {choices.map(choice => (\n                <li key={choice.index}\n                    onClick={() => makeChoice(choice.index)}>\n                        {choice.text}\n                    </li>\n            ))}\n        </ul>\n    </section>\n)\n\nexport default Choices","import React from \"react\"\nimport classes from \"./story.module.css\"\n\nconst Story = ({ sceneText }) => (\n    <section className=\"story-text\">\n        {sceneText.map((text, idx) =>{\n          return <p className={classes.typewriter} key={idx}> {text} </p>\n        })}\n    </section>\n)\n\nexport default Story","import { Story } from \"inkjs\"\nimport storyContent from \"../inkJson/TestTransition.ink.json\"\n\nexport const ink = new Story(storyContent)\n\nexport const MAKE_CHOICE = \"MAKE_CHOICE\"\n\nexport const getGlobalVars = variablesState => {\n    return(\n        Object.keys(variablesState._globalVariables).reduce(\n            (acc, key) => ({\n                ...acc,\n                [key]: variablesState[key]\n            }),{}\n        )\n    )\n}\n\nexport const getTags = tags => {\n    return(\n        tags.reduce(\n            (acc, tag) => ({ ...acc,\n                [tag.split(\": \")[0]]: tag.split(\": \")[1]\n            }),\n            {}\n        )\n    )\n}\n\nexport const gameLoop = () => {\n    let sceneText = []\n    let currentTags = []\n\n\n    while (ink.canContinue) {\n        sceneText.push(ink.Continue())\n        currentTags = currentTags.concat(ink.currentTags)\n    }\n\n    const { currentChoices, variablesState } = ink\n\n    if(!ink.canContinue && !currentChoices.length){\n        throw new GameOverError(\"no more choices\")\n    }\n\n    return {\n        globals: getGlobalVars(variablesState),\n        tags: getTags(currentTags),\n        currentChoices,\n        sceneText,\n        currentTags\n    }\n}\n\nexport const makeChoice = choiceIdx => {\n    ink.ChooseChoiceIndex(choiceIdx)\n    try{\n        const gameData = gameLoop()\n        return {\n            type: MAKE_CHOICE,\n            ...gameData\n        }\n\n    } catch (err){\n        if(err instanceof GameOverError && err.reason === \"no more choices\"){\n            return {\n                type: MAKE_CHOICE,\n                ending: true\n            }\n        }\n        \n        throw err\n    }\n}\n\nfunction GameOverError(reason = \"\", ...rest) {\n    var instance = new Error(`Game Over, ${reason}`, ...rest)\n    instance.reason = reason\n    \n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this))\n\n    if(Error.captureStackTrace){\n        Error.captureStackTrace(instance, GameOverError)\n    }\n    return instance\n}\n\nGameOverError.prototype = Object.create(Error.prototype, {\n    constructor: {\n        value: Error,\n        enumerable: false,\n        writable: true,\n        configurable: true\n    }\n})\n\nif(Object.setPrototypeOf){\n    Object.setPrototypeOf(GameOverError, Error)\n\n} else {\n    GameOverError.__proto__ = Error\n}","import React from 'react';\nimport { connect } from \"react-redux\"\nimport Scene from \"./components/Scene\"\nimport Choices from \"./components/Choices\"\nimport Story from \"./components/Story\"\nimport { makeChoice } from \"./state/actions\" \nimport './App.css';\n\nconst App = props => {\n  \n  return props.ending ? (\n    <div className=\"ending\"> YOU WIN!</div>\n  ) : (\n    <div className=\"App\">\n      <Scene tags={props.tags} />\n      <Story sceneText={props.sceneText} />\n      <Choices choices={props.currentChoices} makeChoice={props.makeChoice} />\n    </div>\n  )\n\n}\n\nconst stateToProps = state => ({\n  tags: state.tags,\n  currentChoices: state.currentChoices,\n  sceneText: state.sceneText,\n  ending: state.ending\n})\n\nconst dispatchToProps = dispatch => ({\n  makeChoice: idx => dispatch(makeChoice(idx))\n})\n\nexport default connect(stateToProps, dispatchToProps)(App);\n","import { gameLoop, MAKE_CHOICE } from \"./actions\"\n\nexport const INITIAL_STATE = {\n    ending: false,\n    ...gameLoop()\n}\n\nexport default (state = INITIAL_STATE, { type, ...action }) => {\n    switch (type) {\n        case MAKE_CHOICE:\n            return { ...state, ...action }\n        default:\n            return state\n    }\n}\n","import { createStore } from \"redux\"\nimport { devToolsEnhancer } from \"redux-devtools-extension\"\nimport inkGame, { INITIAL_STATE } from \"./reducers\"\n\nexport default createStore(inkGame, INITIAL_STATE, devToolsEnhancer())\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport App from './App';\nimport store from \"./state\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}